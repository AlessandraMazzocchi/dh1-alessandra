In this project, I would like to explore how J.K. Rowling modeled the Harry Potter characters' psychologies around
emotions and how the protagonist - Harry - reacts emotionally to his closest human connections. 
Before starting this project, I revised the theoretical portion of coding available on the syllabus and two books 
available in the lab: Deep Learning with R and Text Analysis with R for Student of Literature. 

Install packages
```{r}
install.packages("harrypotter")
install.packages("wordcloud")
install.packages("devtools")
install.packages("tidyverse")
install.packages("igraph")
install.packages("ggraph")
install.packages("ggwordcloud")
```

Libraries
```{r}
library(wordcloud)
library(devtools)
library(tidyverse)      
library(stringr)        
library(tidytext)
library(dplyr)
library(reshape2)
library(igraph)
library(ggraph)
library(harrypotter)
library(ggplot2)
library(ggwordcloud)

set.seed(1234)
theme_set(theme_minimal())
devtools::install_github("bradleyboehmke/harrypotter")

if (packageVersion("devtools") < 1.6) {
  install.packages("devtools")
}

devtools::install_github("bradleyboehmke/harrypotter")
```

Name the books, create a directory (remember to use "" signs)
```{r}
hp_books <- c("philosophers_stone", "chamber_of_secrets",
              "prisoner_of_azkaban", "goblet_of_fire",
              "order_of_the_phoenix", "half_blood_prince",
              "deathly_hallows")

books <- list(philosophers_stone, chamber_of_secrets,
              prisoner_of_azkaban, goblet_of_fire,
              order_of_the_phoenix, half_blood_prince,
              deathly_hallows)
```

Combine into a list (with explanation for each line) - (with quotes signs)
```{r}
hp_words <- list("philosophers_stone", "chamber_of_secrets",
              "prisoner_of_azkaban", "goblet_of_fire",
              "order_of_the_phoenix", "half_blood_prince",
              "deathly_hallows"
) %>%
  # name each list element
  set_names(hp_books) %>%
  # convert each book to a data frame and merge into a single data frame
  map_df(as_tibble, .id = "book") %>%
  # convert book to a factor
  mutate(book = factor(book, levels = hp_books)) %>%
  # remove empty chapters
  drop_na(value) %>%
  # create a chapter id column
  group_by(book) %>%
  mutate(chapter = row_number(book)) %>%
  # tokenize the data frame
  unnest_tokens(word, value)

hp_words
```

RESULTS OPTION #1 FROM CONSOLE (bottom of RStudio) - cannot copy R notebook tibble
# A tibble: 7 x 3
# Groups:   book [7]
  book                 chapter word                
  <fct>                  <int> <chr>               
1 philosophers_stone         1 philosophers_stone  
2 chamber_of_secrets         1 chamber_of_secrets  
3 prisoner_of_azkaban        1 prisoner_of_azkaban 
4 goblet_of_fire             1 goblet_of_fire      
5 order_of_the_phoenix       1 order_of_the_phoenix
6 half_blood_prince          1 half_blood_prince   
7 deathly_hallows            1 deathly_hallows    

OPTION #2
Combine into a list (with explanation for each line) - (without quotes signs)
```{r}
hp_words <- list(philosophers_stone, chamber_of_secrets,
              prisoner_of_azkaban, goblet_of_fire,
              order_of_the_phoenix, half_blood_prince,
              deathly_hallows
) %>%
  # name each list element
  set_names(hp_books) %>%
  # convert each book to a data frame and merge into a single data frame
  map_df(as_tibble, .id = "book") %>%
  # convert book to a factor
  mutate(book = factor(book, levels = hp_books)) %>%
  # remove empty chapters
  drop_na(value) %>%
  # create a chapter id column
  group_by(book) %>%
  mutate(chapter = row_number(book)) %>%
  # tokenize the data frame
  unnest_tokens(word, value)

hp_words
```
RESULTS OPTION #2 FROM CONSOLE (bottom of RStudio) - cannot copy R notebook tibble
# A tibble: 1,089,386 x 3
# Groups:   book [7]
   book               chapter word   
   <fct>                <int> <chr>  
 1 philosophers_stone       1 the    
 2 philosophers_stone       1 boy    
 3 philosophers_stone       1 who    
 4 philosophers_stone       1 lived  
 5 philosophers_stone       1 mr     
 6 philosophers_stone       1 and    
 7 philosophers_stone       1 mrs    
 8 philosophers_stone       1 dursley
 9 philosophers_stone       1 of     
10 philosophers_stone       1 number 
# â€¦ with 1,089,376 more rows

Finding the most frequent words in HP for each book (finalized to extract the sentiments)
```{r}
hp_words %>%
  # delete stopwords
  anti_join(stop_words) %>%
  # summarize count per word per book
  count(book, word, sort = TRUE) %>%
  # get top 15 words per book
  group_by(book) %>%
  top_n(15) %>%
  ungroup() %>%
  mutate(word = reorder_within(word, n, book)) %>%
  # create barplot
  ggplot(aes(x = word, y = n, fill = book)) + 
  geom_col(color = "black") +
  scale_x_reordered() +
  labs(title = "Most frequent words in Harry Potter",
       x = NULL,
       y = "Word count") +
  facet_wrap(~ book, scales = "free") +
  coord_flip() +
  theme(legend.position = "none")
```
RESULTS (cannot copy the table)
Harry is the most frequent word in all of the books followed by Ron in the first 4 books, Hermione in the 5th and 7th and 
Dumbledore in the 6th. The first 3-4 names of every book appear always to be Harry, Ron, Hermione, Dumbledore or Hagrid.
Having a series of characters that occur so close one another shows that J.K. Rowling writing is heavily sentimental.

Extracting sentiment list
```{r}
series %>%
  right_join(get_sentiments("nrc")) %>%
  filter(!is.na(sentiment)) %>%
  count(sentiment, sort = TRUE)
```
RESULTS
sentiment <chr> n <int>
negative	      3324			
positive	      2312			
fear	          1476			
anger	          1247			
trust	          1231			
sadness	        1191			
disgust	        1058			
anticipation	  839			
joy	            689			
surprise	      534	

Group the words by AFINN dictionary (sentiment analysis)
```{r}
(hp_bing <- hp_words %>% 
  inner_join(get_sentiments("bing")))
```

Divide the positive and the negative sentiments in HP series
```{r}

# all series
hp_bing %>%
  # generate frequency count for each word and sentiment
  group_by(sentiment) %>%
  count(word, sort = TRUE) %>%
  # extract 10 most frequent pos/neg words
  group_by(sentiment) %>%
  top_n(10) %>%
  ungroup() %>%
  # prep data for sorting each word independently by facet
  mutate(word = reorder_within(word, n, sentiment)) %>%
  # generate the bar plot
  ggplot(aes(word, n, fill = sentiment)) +
  geom_col(show.legend = FALSE) +
  # used with reorder_within() to label the axis tick marks
  scale_x_reordered() +
  facet_wrap(~ sentiment, scales = "free_y") +
  labs(title = "Sentimental words used in the Harry Potter series",
       x = NULL,
       y = "Number of occurences in all seven books") +
  coord_flip()
```
Sentiment analysis for each book using AFINN dictionary
```{r}
hp_words %>% 
  inner_join(get_sentiments("afinn")) %>%
  group_by(book, chapter) %>%
  summarize(value = sum(value)) %>%
  ggplot(aes(chapter, value, fill = book)) +
  geom_col() +
  facet_wrap(~ book, scales = "free_x") +
  labs(title = "Emotional arc of Harry Potter books",
       subtitle = "AFINN sentiment dictionary",
       x = "Chapter",
       y = "Emotional score") +
  theme(legend.position = "none")
```
RESULTS (cannot copy tables)
It is very interesting to notice how the sentiments charts experience severe ups and downs over the seven books. 
As stated before, J.K. Rowling's writing shows the emotional connection between characters - positive and negative -, 
in fact, the peaks of positive and negative sentiments are directly proportional to Harry's experiences or his closest
emotional links' experiences. For example, in the HBP the unexpected peak of positive vocabulary immediately followed
by a chunk of negative vocabulary matches with Harry's success in collecting the last memory bit for the Horcrux hunt
and, right after, the travel with Dumbledore, his mental torture drinking the potion and the final death.
In addition, characters' psychological development are also represented throught the sentiment vocabulary: in their puberty
years (second half of 3rd book, 4th, and 5th) , Harry, Ron and Hermione experience severe peaks of emotions - both positive 
and negative - represented here with the AFINN dictionary. 






